plugins {
    id 'java'
    id('xyz.jpenilla.run-paper')  version('2.2.3')
    id ("com.github.johnrengelman.shadow") version ("8.1.1")
}

group = 'dev.munky'
version = 'alpha'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    } // paper
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {url = "https://repo.codemc.io/repository/maven-public/"} // CommandAPI
    maven {
        name= "jitpack"
        url = "https://jitpack.io"
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' } //
    maven { url = 'https://oss.sonatype.org/content/repositories/central' } //
    maven { url = "https://repo.onarandombox.com/content/groups/public/" } // MV
}

dependencies {
    compileOnly('io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT')
    compileOnly('com.github.MilkBowl:VaultAPI:1.7')
    implementation 'dev.jorel:commandapi-bukkit-shade-mojang-mapped:9.4.1'
    implementation 'org.xerial:sqlite-jdbc:3.45.1.0'
    implementation 'com.onarandombox.multiversecore:multiverse-core:4.3.12'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.20.4") // or another

        downloadPlugins {
            url("https://ci.lucko.me/job/spark/400/artifact/spark-bukkit/build/libs/spark-1.10.59-bukkit.jar")
            url("https://download.luckperms.net/1532/bukkit/loader/LuckPerms-Bukkit-5.4.119.jar")
            url("https://github.com/SkriptLang/Skript/releases/download/2.8.2/Skript.jar")
            //url("https://github.com/ShaneBeee/SkBee/releases/download/3.3.0/SkBee-3.3.0.jar")
            url("https://github.com/SkriptLang/skript-reflect/releases/download/v2.4/skript-reflect.jar")
            url("https://github.com/MilkBowl/Vault/releases/download/1.7.3/Vault.jar")
            url('https://dev.bukkit.org/projects/multiverse-core/files/latest')
            // add plugins here (see their docs)
            // adding plugins this way is better than manually adding to the run context because anyone cloning your repo will have an equivalent plugin list
        }
    }
    shadowJar{
        dependencies {
            include dependency("dev.jorel:commandapi-bukkit-shade-mojang-mapped:9.4.1")
        }
        archiveBaseName.set("Ascend")
        mergeServiceFiles()
        relocate("com.github.hamza-cskn.obliviate-invs", "dev.munky.ascend.obliviate")
        relocate("dev.jorel.commandapi", "dev.munky.ascend.commandapi")
        // relocate("de.tr7zw.changeme.nbtapi", "dev.munky.ascend.nbtapi")
        relocate("io.github.retrooper.packetevents","dev.munky.ascend.packetevents.impl")
        relocate("com.github.retrooper.packetevents", "dev.munky.ascend.packetevents.api")
        minimize()
        jar {
            manifest {
                attributes 'Main-Class': 'dev.munky.ascend.Ascend'
            }
        }
        assemble.dependsOn shadowJar
    }
}
